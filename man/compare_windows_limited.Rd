% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AuxilliaryFunctions.R
\name{compare_windows_limited}
\alias{compare_windows_limited}
\title{Compare windows limited}
\usage{
compare_windows_limited(
  I1,
  I2,
  V1,
  V2,
  RI2,
  W2,
  W,
  W_extension,
  R,
  epsilon,
  delta,
  trace = TRUE,
  trace_limit = 10000,
  return_tibble = TRUE
)
}
\arguments{
\item{I1}{Numeric vector of length 'T1'.}

\item{I2}{Numeric vector of length 'T2'.}

\item{V1}{Numeric vector of length 'T1'.}

\item{V2}{Numeric vector of length 'T2'.}

\item{RI2}{Numeric vector limiting the available windows in 'I2'/'V2'.}

\item{W2}{Numeric vector of window sizes for 'I2'/'V2'. Needs the same length as 'RT2'.}

\item{W}{Scalar: the window size.}

\item{W_extension}{Scalar: search window for 'I2' / 'V2' when compared to 'I1' / 'V1'.}

\item{R}{Scalar: the maximum allowed number of place the two windows exceed epsilon.}

\item{epsilon}{Tolerance used when comparing windows of 'I1' and 'I2'.}

\item{delta}{Tolerance used when comparing the initial index of the window in 'SOC1' and 'SOC2'.}

\item{trace}{TRUE/FLASE: Show trace?}

\item{trace_limit}{Scalar: Limit the trace shown to 'trace_limit'.}

\item{return_tibble}{TRUE/FALSE: Should a tibble be returned?}
}
\value{
Either a list of lists, or a \link{tibble}.
}
\description{
Compare windows, with size W, of two vectors, 'I1' and 'I2', with the added requirement that starting index of the windows being compared of two other vectors 'SOC1' and 'SOC2' are within some tolerance 'delta'. The windows are compared by counting the number of indices where they differ more than some tolerance epsilon. Limited for the first series ('I1'/'V1') to the indicies provided by 'RI1'.
}
\details{
No default values are used for 'W', 'epsilon', or 'delta' as the choise of e.g. 'epsilon' and 'delta' are heavily dependent on the scale of the 'Is' and the 'SOCs'. Furthermore, the 'SOCs' are needed to reduce the amount of "relevant" information, otherwise the method will run out of memory quickly.
}
